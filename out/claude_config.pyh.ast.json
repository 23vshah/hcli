{
  "phy_chunks": {
    "main": {
      "id": "main",
      "type": "module",
      "children": [
        {
          "id": "module_docstring",
          "type": "docstring",
          "description": "module docstring describing Claude Code SDK Configuration with pre-configured options",
          "line_range": [
            1,
            4
          ]
        },
        {
          "id": "imports",
          "type": "imports",
          "description": "import ClaudeCodeOptions from claude_code_sdk, Path from pathlib, and os module",
          "line_range": [
            6,
            8
          ]
        },
        {
          "id": "class_ClaudeConfig",
          "type": "class_definition",
          "signature": "class ClaudeConfig",
          "description": "Pre-configured Claude Code options for different scenarios",
          "children": [
            {
              "id": "basic_config_method",
              "type": "method_definition",
              "signature": "method basic_config() -> None",
              "description": "returns basic configuration with simple system prompt for helpful AI assistant",
              "line_range": [
                15,
                19
              ]
            },
            {
              "id": "development_config_method",
              "type": "method_definition",
              "signature": "method development_config() -> None",
              "description": "returns development configuration with expert Python developer prompt, acceptEdits permission mode, current working directory, and comprehensive tool access",
              "line_range": [
                22,
                32
              ]
            },
            {
              "id": "analysis_config_method",
              "type": "method_definition",
              "signature": "method analysis_config() -> None",
              "description": "returns analysis configuration with code analysis expert prompt, plan permission mode, and read-only tools for analysis",
              "line_range": [
                35,
                43
              ]
            },
            {
              "id": "project_management_config_method",
              "type": "method_definition",
              "signature": "method project_management_config() -> None",
              "description": "returns project management configuration with task organization prompt, acceptEdits mode, and basic file and web tools",
              "line_range": [
                46,
                54
              ]
            },
            {
              "id": "research_config_method",
              "type": "method_definition",
              "signature": "method research_config() -> None",
              "description": "returns research configuration with research assistant prompt, plan mode, and web search and read tools",
              "line_range": [
                57,
                65
              ]
            },
            {
              "id": "custom_config_method",
              "type": "method_definition",
              "signature": "method custom_config(system_prompt, permission_mode, allowed_tools, cwd) -> None",
              "children": [
                {
                  "id": "config_initialization",
                  "type": "assignment",
                  "description": "create empty ClaudeCodeOptions instance",
                  "line_range": [
                    76,
                    76
                  ]
                },
                {
                  "id": "parameter_conditionals",
                  "type": "conditional_block",
                  "description": "conditionally set system_prompt, permission_mode, allowed_tools, and cwd on config if provided",
                  "line_range": [
                    78,
                    85
                  ]
                },
                {
                  "id": "kwargs_processing",
                  "type": "for_loop",
                  "description": "iterate through additional keyword arguments and set them on config if the attribute exists",
                  "line_range": [
                    88,
                    90
                  ]
                },
                {
                  "id": "return_config",
                  "type": "return_statement",
                  "description": "return the configured ClaudeCodeOptions instance",
                  "line_range": [
                    92,
                    92
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": "tool_sets_definition",
          "type": "assignment",
          "description": "define TOOL_SETS dictionary mapping tool set names to lists of available tools for different use cases",
          "line_range": [
            96,
            107
          ]
        },
        {
          "id": "function_get_config_for_use_case",
          "type": "function_definition",
          "signature": "function get_config_for_use_case(use_case) -> None",
          "children": [
            {
              "id": "configs_mapping",
              "type": "assignment",
              "description": "create dictionary mapping use case strings to corresponding ClaudeConfig methods",
              "line_range": [
                121,
                127
              ]
            },
            {
              "id": "use_case_validation",
              "type": "if_statement",
              "description": "validate that use_case exists in configs dictionary, raise ValueError if not",
              "line_range": [
                129,
                130
              ]
            },
            {
              "id": "config_creation",
              "type": "assignment",
              "description": "call the appropriate config method to create base configuration",
              "line_range": [
                132,
                132
              ]
            },
            {
              "id": "overrides_processing",
              "type": "for_loop",
              "description": "apply any override parameters to the config using setattr if the attribute exists",
              "line_range": [
                135,
                137
              ]
            },
            {
              "id": "return_config",
              "type": "return_statement",
              "description": "return the configured ClaudeCodeOptions instance",
              "line_range": [
                139,
                139
              ]
            }
          ]
        },
        {
          "id": "function_add_tools_to_config",
          "type": "function_definition",
          "signature": "function add_tools_to_config(config, tool_set_name) -> None",
          "children": [
            {
              "id": "tool_set_validation",
              "type": "if_statement",
              "description": "validate that tool_set_name exists in TOOL_SETS, raise ValueError if not",
              "line_range": [
                153,
                154
              ]
            },
            {
              "id": "tools_retrieval",
              "type": "assignment",
              "description": "get the list of tools from TOOL_SETS for the specified tool set name",
              "line_range": [
                156,
                156
              ]
            },
            {
              "id": "tools_assignment",
              "type": "if_else_statement",
              "description": "if config already has allowed_tools extend the list, otherwise set allowed_tools to the new tools list",
              "line_range": [
                157,
                160
              ]
            },
            {
              "id": "return_config",
              "type": "return_statement",
              "description": "return the updated configuration",
              "line_range": [
                162,
                162
              ]
            }
          ]
        },
        {
          "id": "main_execution_block",
          "type": "if_statement",
          "description": "when run as main script: demonstrate three examples - getting development config, creating custom config with overrides, and adding file operations tools to basic config",
          "line_range": [
            166,
            183
          ]
        }
      ]
    }
  },
  "metadata": {
    "source_py": "/Users/krishnapagrut/Developer/hcli/claude_config.py"
  }
}
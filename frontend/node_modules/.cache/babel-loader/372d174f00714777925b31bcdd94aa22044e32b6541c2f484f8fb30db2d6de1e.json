{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapagrut/Developer/hcli/frontend/src/components/TwoPanelEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useStore } from '../hooks/useStore';\nimport { Edit3, Save, Eye } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwoPanelEditor = ({\n  pyhContent,\n  pyContent\n}) => {\n  _s();\n  const {\n    repository,\n    updatePyhContent,\n    saveUserPhy,\n    isLoading,\n    editor\n  } = useStore();\n  const [leftWidth, setLeftWidth] = useState(50); // percentage\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoveredLine, setHoveredLine] = useState(null);\n  const [activeLine, setActiveLine] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const containerRef = useRef(null);\n\n  // Split content into lines\n  const pyhLines = pyhContent.split('\\n');\n  const pyLines = pyContent.split('\\n');\n\n  // Create line mappings for proper alignment\n  const createAlignedLineNumbers = () => {\n    const lineMappings = editor.lineMappings || [];\n    const maxLines = Math.max(pyhLines.length, pyLines.length);\n    const alignedLines = [];\n\n    // Create a map of PHY line to Python line\n    const pyhToPyMap = new Map();\n    const pyToPyhMap = new Map();\n    lineMappings.forEach(mapping => {\n      pyhToPyMap.set(mapping.pyhLine, mapping.pyLine);\n      pyToPyhMap.set(mapping.pyLine, mapping.pyhLine);\n    });\n\n    // Generate aligned line numbers\n    for (let i = 0; i < maxLines; i++) {\n      const pyhLineNum = i + 1;\n      const pyLineNum = i + 1;\n\n      // Check if we have a mapping for this line\n      const mappedPyLine = pyhToPyMap.get(pyhLineNum);\n      const mappedPyhLine = pyToPyhMap.get(pyLineNum);\n      alignedLines.push({\n        pyhLine: pyhLineNum,\n        pyLine: mappedPyLine || pyLineNum,\n        isMapped: !!mappedPyLine || !!mappedPyhLine\n      });\n    }\n    return alignedLines;\n  };\n  const alignedLines = createAlignedLineNumbers();\n\n  // Handle mouse down on divider\n  const handleMouseDown = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  // Handle mouse move for resizing\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!isDragging || !containerRef.current) return;\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const newLeftWidth = (e.clientX - containerRect.left) / containerRect.width * 100;\n\n      // Constrain between 20% and 80%\n      const constrainedWidth = Math.min(Math.max(newLeftWidth, 20), 80);\n      setLeftWidth(constrainedWidth);\n    };\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging]);\n\n  // Handle line hover for highlighting\n  const handleLineHover = (lineNumber, panel) => {\n    setHoveredLine(lineNumber);\n\n    // Find the corresponding line in the other panel\n    const lineMappings = editor.lineMappings || [];\n    if (panel === 'pyh') {\n      // Find the Python line that maps to this PHY line\n      const mapping = lineMappings.find(m => m.pyhLine === lineNumber);\n      if (mapping) {\n        setHoveredLine(mapping.pyLine);\n      }\n    } else {\n      // Find the PHY line that maps to this Python line\n      const mapping = lineMappings.find(m => m.pyLine === lineNumber);\n      if (mapping) {\n        setHoveredLine(mapping.pyhLine);\n      }\n    }\n  };\n  const handleLineLeave = () => {\n    setHoveredLine(null);\n  };\n\n  // Handle textarea change for editable content\n  const handlePyhChange = e => {\n    const newContent = e.target.value;\n    updatePyhContent(newContent);\n    setHasUnsavedChanges(true);\n  };\n\n  // Handle save button\n  const handleSave = async () => {\n    if (repository.selectedFile) {\n      await saveUserPhy(repository.selectedFile, pyhContent);\n      setHasUnsavedChanges(false);\n    }\n  };\n\n  // Handle edit toggle\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Handle textarea focus for active line highlighting\n  const handleTextareaFocus = e => {\n    const textarea = e.target;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\n    const lineNumber = textBeforeCursor.split('\\n').length;\n    setActiveLine(lineNumber);\n  };\n  const handleTextareaBlur = () => {\n    setActiveLine(null);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-full w-full bg-gray-50 items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"Loading file content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: \"Please wait while we load the file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show placeholder if no content\n  if (!pyhContent && !pyContent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-full w-full bg-gray-50 items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"No file selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: \"Select a Python file from the file explorer to view its content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"flex h-full w-full bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 border-r border-gray-300 font-mono text-sm relative flex flex-col\",\n      style: {\n        width: `${leftWidth}%`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-2 bg-gray-200 border-b border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"PHY Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), hasUnsavedChanges && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-orange-600\",\n            children: \"\\u2022 Unsaved changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditToggle,\n            className: `flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors ${isEditing ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-gray-500 text-white hover:bg-gray-600'}`,\n            children: [isEditing ? /*#__PURE__*/_jsxDEV(Eye, {\n              className: \"h-3 w-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Edit3, {\n              className: \"h-3 w-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isEditing ? 'View' : 'Edit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !hasUnsavedChanges,\n            className: \"flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed bg-green-600 text-white hover:bg-green-700\",\n            children: [/*#__PURE__*/_jsxDEV(Save, {\n              className: \"h-3 w-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute left-0 top-0 w-8 bg-gray-200 border-r border-gray-300 h-full overflow-hidden\",\n          children: alignedLines.map((lineInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-xs text-gray-500 flex items-center justify-center ${hoveredLine === lineInfo.pyhLine ? 'bg-blue-100' : ''} ${activeLine === lineInfo.pyhLine ? 'bg-blue-200' : ''} ${lineInfo.isMapped ? 'font-semibold text-blue-600' : ''}`,\n            style: {\n              height: '20px',\n              lineHeight: '20px'\n            },\n            title: lineInfo.isMapped ? `Maps to Python line ${lineInfo.pyLine}` : '',\n            children: lineInfo.pyhLine\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pl-10 pr-2 py-2 h-full\",\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: pyhContent,\n            onChange: handlePyhChange,\n            onFocus: handleTextareaFocus,\n            onBlur: handleTextareaBlur,\n            className: \"w-full h-full resize-none border-none outline-none bg-transparent text-gray-800 min-h-0\",\n            placeholder: \"Edit PHY content here...\",\n            spellCheck: false,\n            style: {\n              height: 'calc(100vh - 250px)',\n              lineHeight: '20px',\n              fontSize: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-full overflow-auto text-gray-800 font-mono\",\n            style: {\n              height: 'calc(100vh - 250px)',\n              lineHeight: '20px',\n              fontSize: '14px',\n              whiteSpace: 'pre-wrap'\n            },\n            children: alignedLines.map((lineInfo, index) => {\n              const line = pyhLines[index] || '';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${hoveredLine === lineInfo.pyhLine ? 'bg-blue-50' : ''} ${activeLine === lineInfo.pyhLine ? 'bg-blue-100' : ''} ${lineInfo.isMapped ? 'border-l-2 border-blue-400 pl-1' : ''}`,\n                style: {\n                  minHeight: '20px',\n                  lineHeight: '20px',\n                  whiteSpace: 'pre-wrap',\n                  wordBreak: 'break-all'\n                },\n                onMouseEnter: () => handleLineHover(lineInfo.pyhLine, 'pyh'),\n                onMouseLeave: handleLineLeave,\n                onClick: () => setActiveLine(lineInfo.pyhLine),\n                children: line || '\\u00A0'\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-1 bg-gray-300 cursor-col-resize hover:bg-gray-400 transition-colors ${isDragging ? 'bg-gray-500' : ''}`,\n      onMouseDown: handleMouseDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-0.5 h-8 bg-gray-400 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white font-mono text-sm relative\",\n      style: {\n        width: `${100 - leftWidth}%`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute left-0 top-0 w-8 bg-gray-100 border-r border-gray-300 h-full overflow-hidden\",\n        children: alignedLines.map((lineInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `h-5 text-xs text-gray-500 flex items-center justify-center ${hoveredLine === lineInfo.pyLine ? 'bg-blue-100' : ''} ${lineInfo.isMapped ? 'font-semibold text-blue-600' : ''}`,\n          style: {\n            height: '20px',\n            lineHeight: '20px'\n          },\n          title: lineInfo.isMapped ? `Maps to PHY line ${lineInfo.pyhLine}` : '',\n          children: lineInfo.pyLine\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pl-10 pr-2 py-2 h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full overflow-auto font-mono text-gray-800\",\n          style: {\n            height: 'calc(100vh - 200px)',\n            lineHeight: '20px',\n            fontSize: '14px',\n            whiteSpace: 'pre-wrap'\n          },\n          children: alignedLines.map((lineInfo, index) => {\n            const line = pyLines[lineInfo.pyLine - 1] || '';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${hoveredLine === lineInfo.pyLine ? 'bg-blue-50' : ''} ${lineInfo.isMapped ? 'border-l-2 border-blue-400 pl-1' : ''}`,\n              style: {\n                minHeight: '20px',\n                lineHeight: '20px',\n                whiteSpace: 'pre-wrap',\n                wordBreak: 'break-all'\n              },\n              onMouseEnter: () => handleLineHover(lineInfo.pyLine, 'py'),\n              onMouseLeave: handleLineLeave,\n              children: [line || '\\u00A0', \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(TwoPanelEditor, \"ixFh7I5u1seqne410Zr+Kl2cWDo=\", false, function () {\n  return [useStore];\n});\n_c = TwoPanelEditor;\nexport default TwoPanelEditor;\nvar _c;\n$RefreshReg$(_c, \"TwoPanelEditor\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useStore","Edit3","Save","Eye","jsxDEV","_jsxDEV","TwoPanelEditor","pyhContent","pyContent","_s","repository","updatePyhContent","saveUserPhy","isLoading","editor","leftWidth","setLeftWidth","isDragging","setIsDragging","hoveredLine","setHoveredLine","activeLine","setActiveLine","isEditing","setIsEditing","hasUnsavedChanges","setHasUnsavedChanges","containerRef","pyhLines","split","pyLines","createAlignedLineNumbers","lineMappings","maxLines","Math","max","length","alignedLines","pyhToPyMap","Map","pyToPyhMap","forEach","mapping","set","pyhLine","pyLine","i","pyhLineNum","pyLineNum","mappedPyLine","get","mappedPyhLine","push","isMapped","handleMouseDown","e","preventDefault","handleMouseMove","current","containerRect","getBoundingClientRect","newLeftWidth","clientX","left","width","constrainedWidth","min","handleMouseUp","document","addEventListener","removeEventListener","handleLineHover","lineNumber","panel","find","m","handleLineLeave","handlePyhChange","newContent","target","value","handleSave","selectedFile","handleEditToggle","handleTextareaFocus","textarea","cursorPosition","selectionStart","textBeforeCursor","substring","handleTextareaBlur","className","children","fileName","_jsxFileName","columnNumber","ref","style","onClick","disabled","map","lineInfo","index","height","lineHeight","title","onChange","onFocus","onBlur","placeholder","spellCheck","fontSize","whiteSpace","line","minHeight","wordBreak","onMouseEnter","onMouseLeave","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/krishnapagrut/Developer/hcli/frontend/src/components/TwoPanelEditor.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useStore } from '../hooks/useStore';\nimport { Edit3, Save, Eye } from 'lucide-react';\n\ninterface TwoPanelEditorProps {\n  pyhContent: string;   // text output from pyh_ast_to_output.py\n  pyContent: string;    // actual Python code\n}\n\nconst TwoPanelEditor: React.FC<TwoPanelEditorProps> = ({ pyhContent, pyContent }) => {\n  const { repository, updatePyhContent, saveUserPhy, isLoading, editor } = useStore();\n  const [leftWidth, setLeftWidth] = useState(50); // percentage\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoveredLine, setHoveredLine] = useState<number | null>(null);\n  const [activeLine, setActiveLine] = useState<number | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n\n  // Split content into lines\n  const pyhLines = pyhContent.split('\\n');\n  const pyLines = pyContent.split('\\n');\n  \n  // Create line mappings for proper alignment\n  const createAlignedLineNumbers = () => {\n    const lineMappings = editor.lineMappings || [];\n    const maxLines = Math.max(pyhLines.length, pyLines.length);\n    const alignedLines = [];\n    \n    // Create a map of PHY line to Python line\n    const pyhToPyMap = new Map<number, number>();\n    const pyToPyhMap = new Map<number, number>();\n    \n    lineMappings.forEach(mapping => {\n      pyhToPyMap.set(mapping.pyhLine, mapping.pyLine);\n      pyToPyhMap.set(mapping.pyLine, mapping.pyhLine);\n    });\n    \n    // Generate aligned line numbers\n    for (let i = 0; i < maxLines; i++) {\n      const pyhLineNum = i + 1;\n      const pyLineNum = i + 1;\n      \n      // Check if we have a mapping for this line\n      const mappedPyLine = pyhToPyMap.get(pyhLineNum);\n      const mappedPyhLine = pyToPyhMap.get(pyLineNum);\n      \n      alignedLines.push({\n        pyhLine: pyhLineNum,\n        pyLine: mappedPyLine || pyLineNum,\n        isMapped: !!mappedPyLine || !!mappedPyhLine\n      });\n    }\n    \n    return alignedLines;\n  };\n  \n  const alignedLines = createAlignedLineNumbers();\n\n  // Handle mouse down on divider\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  // Handle mouse move for resizing\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isDragging || !containerRef.current) return;\n      \n      const containerRect = containerRef.current.getBoundingClientRect();\n      const newLeftWidth = ((e.clientX - containerRect.left) / containerRect.width) * 100;\n      \n      // Constrain between 20% and 80%\n      const constrainedWidth = Math.min(Math.max(newLeftWidth, 20), 80);\n      setLeftWidth(constrainedWidth);\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging]);\n\n  // Handle line hover for highlighting\n  const handleLineHover = (lineNumber: number, panel: 'pyh' | 'py') => {\n    setHoveredLine(lineNumber);\n    \n    // Find the corresponding line in the other panel\n    const lineMappings = editor.lineMappings || [];\n    if (panel === 'pyh') {\n      // Find the Python line that maps to this PHY line\n      const mapping = lineMappings.find(m => m.pyhLine === lineNumber);\n      if (mapping) {\n        setHoveredLine(mapping.pyLine);\n      }\n    } else {\n      // Find the PHY line that maps to this Python line\n      const mapping = lineMappings.find(m => m.pyLine === lineNumber);\n      if (mapping) {\n        setHoveredLine(mapping.pyhLine);\n      }\n    }\n  };\n\n  const handleLineLeave = () => {\n    setHoveredLine(null);\n  };\n\n  // Handle textarea change for editable content\n  const handlePyhChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newContent = e.target.value;\n    updatePyhContent(newContent);\n    setHasUnsavedChanges(true);\n  };\n\n  // Handle save button\n  const handleSave = async () => {\n    if (repository.selectedFile) {\n      await saveUserPhy(repository.selectedFile, pyhContent);\n      setHasUnsavedChanges(false);\n    }\n  };\n\n  // Handle edit toggle\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Handle textarea focus for active line highlighting\n  const handleTextareaFocus = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    const textarea = e.target;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\n    const lineNumber = textBeforeCursor.split('\\n').length;\n    setActiveLine(lineNumber);\n  };\n\n  const handleTextareaBlur = () => {\n    setActiveLine(null);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <div className=\"flex h-full w-full bg-gray-50 items-center justify-center\">\n        <div className=\"text-center text-gray-500\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <div className=\"text-lg font-medium mb-2\">Loading file content...</div>\n          <div className=\"text-sm\">Please wait while we load the file</div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show placeholder if no content\n  if (!pyhContent && !pyContent) {\n    return (\n      <div className=\"flex h-full w-full bg-gray-50 items-center justify-center\">\n        <div className=\"text-center text-gray-500\">\n          <div className=\"text-lg font-medium mb-2\">No file selected</div>\n          <div className=\"text-sm\">Select a Python file from the file explorer to view its content</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      ref={containerRef}\n      className=\"flex h-full w-full bg-gray-50\"\n    >\n      {/* Left Panel - PYH Content (Editable) */}\n      <div \n        className=\"bg-gray-100 border-r border-gray-300 font-mono text-sm relative flex flex-col\"\n        style={{ width: `${leftWidth}%` }}\n      >\n        {/* Header with Edit Toggle and Save Button */}\n        <div className=\"flex items-center justify-between p-2 bg-gray-200 border-b border-gray-300\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-gray-700\">PHY Content</span>\n            {hasUnsavedChanges && (\n              <span className=\"text-xs text-orange-600\">• Unsaved changes</span>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleEditToggle}\n              className={`flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors ${\n                isEditing \n                  ? 'bg-blue-600 text-white hover:bg-blue-700' \n                  : 'bg-gray-500 text-white hover:bg-gray-600'\n              }`}\n            >\n              {isEditing ? <Eye className=\"h-3 w-3\" /> : <Edit3 className=\"h-3 w-3\" />}\n              <span>{isEditing ? 'View' : 'Edit'}</span>\n            </button>\n            {isEditing && (\n              <button\n                onClick={handleSave}\n                disabled={!hasUnsavedChanges}\n                className=\"flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed bg-green-600 text-white hover:bg-green-700\"\n              >\n                <Save className=\"h-3 w-3\" />\n                <span>Save</span>\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div className=\"flex-1 relative\">\n          {/* Line Numbers */}\n          <div className=\"absolute left-0 top-0 w-8 bg-gray-200 border-r border-gray-300 h-full overflow-hidden\">\n            {alignedLines.map((lineInfo, index) => (\n              <div\n                key={index}\n                className={`text-xs text-gray-500 flex items-center justify-center ${\n                  hoveredLine === lineInfo.pyhLine ? 'bg-blue-100' : ''\n                } ${activeLine === lineInfo.pyhLine ? 'bg-blue-200' : ''} ${\n                  lineInfo.isMapped ? 'font-semibold text-blue-600' : ''\n                }`}\n                style={{ height: '20px', lineHeight: '20px' }}\n                title={lineInfo.isMapped ? `Maps to Python line ${lineInfo.pyLine}` : ''}\n              >\n                {lineInfo.pyhLine}\n              </div>\n            ))}\n          </div>\n\n          {/* Content */}\n          <div className=\"pl-10 pr-2 py-2 h-full\">\n            {isEditing ? (\n              <textarea\n                value={pyhContent}\n                onChange={handlePyhChange}\n                onFocus={handleTextareaFocus}\n                onBlur={handleTextareaBlur}\n                className=\"w-full h-full resize-none border-none outline-none bg-transparent text-gray-800 min-h-0\"\n                placeholder=\"Edit PHY content here...\"\n                spellCheck={false}\n                style={{ \n                  height: 'calc(100vh - 250px)',\n                  lineHeight: '20px',\n                  fontSize: '14px'\n                }}\n              />\n            ) : (\n              <div \n                className=\"w-full h-full overflow-auto text-gray-800 font-mono\"\n                style={{ \n                  height: 'calc(100vh - 250px)',\n                  lineHeight: '20px',\n                  fontSize: '14px',\n                  whiteSpace: 'pre-wrap'\n                }}\n              >\n                {alignedLines.map((lineInfo, index) => {\n                  const line = pyhLines[index] || '';\n                  return (\n                    <div\n                      key={index}\n                      className={`${\n                        hoveredLine === lineInfo.pyhLine ? 'bg-blue-50' : ''\n                      } ${activeLine === lineInfo.pyhLine ? 'bg-blue-100' : ''} ${\n                        lineInfo.isMapped ? 'border-l-2 border-blue-400 pl-1' : ''\n                      }`}\n                      style={{ \n                        minHeight: '20px', \n                        lineHeight: '20px',\n                        whiteSpace: 'pre-wrap',\n                        wordBreak: 'break-all'\n                      }}\n                      onMouseEnter={() => handleLineHover(lineInfo.pyhLine, 'pyh')}\n                      onMouseLeave={handleLineLeave}\n                      onClick={() => setActiveLine(lineInfo.pyhLine)}\n                    >\n                      {line || '\\u00A0'}\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Resizable Divider */}\n      <div\n        className={`w-1 bg-gray-300 cursor-col-resize hover:bg-gray-400 transition-colors ${\n          isDragging ? 'bg-gray-500' : ''\n        }`}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"w-full h-full flex items-center justify-center\">\n          <div className=\"w-0.5 h-8 bg-gray-400 rounded\"></div>\n        </div>\n      </div>\n\n      {/* Right Panel - PY Content (Read-only) */}\n      <div \n        className=\"bg-white font-mono text-sm relative\"\n        style={{ width: `${100 - leftWidth}%` }}\n      >\n        {/* Line Numbers */}\n        <div className=\"absolute left-0 top-0 w-8 bg-gray-100 border-r border-gray-300 h-full overflow-hidden\">\n          {alignedLines.map((lineInfo, index) => (\n            <div\n              key={index}\n              className={`h-5 text-xs text-gray-500 flex items-center justify-center ${\n                hoveredLine === lineInfo.pyLine ? 'bg-blue-100' : ''\n              } ${lineInfo.isMapped ? 'font-semibold text-blue-600' : ''}`}\n              style={{ height: '20px', lineHeight: '20px' }}\n              title={lineInfo.isMapped ? `Maps to PHY line ${lineInfo.pyhLine}` : ''}\n            >\n              {lineInfo.pyLine}\n            </div>\n          ))}\n        </div>\n\n        {/* Content */}\n        <div className=\"pl-10 pr-2 py-2 h-full\">\n          <div \n            className=\"w-full h-full overflow-auto font-mono text-gray-800\" \n            style={{ \n              height: 'calc(100vh - 200px)',\n              lineHeight: '20px',\n              fontSize: '14px',\n              whiteSpace: 'pre-wrap'\n            }}\n          >\n            {alignedLines.map((lineInfo, index) => {\n              const line = pyLines[lineInfo.pyLine - 1] || '';\n              return (\n                <div\n                  key={index}\n                  className={`${\n                    hoveredLine === lineInfo.pyLine ? 'bg-blue-50' : ''\n                  } ${lineInfo.isMapped ? 'border-l-2 border-blue-400 pl-1' : ''}`}\n                  style={{ \n                    minHeight: '20px', \n                    lineHeight: '20px',\n                    whiteSpace: 'pre-wrap',\n                    wordBreak: 'break-all'\n                  }}\n                  onMouseEnter={() => handleLineHover(lineInfo.pyLine, 'py')}\n                  onMouseLeave={handleLineLeave}\n                >\n                  {line || '\\u00A0'} {/* Non-breaking space for empty lines */}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TwoPanelEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
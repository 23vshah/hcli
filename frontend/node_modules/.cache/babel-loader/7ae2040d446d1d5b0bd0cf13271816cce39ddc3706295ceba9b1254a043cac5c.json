{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapagrut/Developer/hcli/frontend/src/components/FileExplorer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChevronRight, ChevronDown, File, Folder, FolderOpen, FileCode } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // Mock data structure\n  const mockFiles = [{\n    name: 'src',\n    type: 'folder',\n    path: 'src',\n    children: [{\n      name: 'components',\n      type: 'folder',\n      path: 'src/components',\n      children: [{\n        name: 'App.tsx',\n        type: 'file',\n        path: 'src/components/App.tsx'\n      }, {\n        name: 'Button.tsx',\n        type: 'file',\n        path: 'src/components/Button.tsx'\n      }]\n    }, {\n      name: 'utils',\n      type: 'folder',\n      path: 'src/utils',\n      children: [{\n        name: 'helpers.py',\n        type: 'file',\n        path: 'src/utils/helpers.py'\n      }, {\n        name: 'helpers.pyh.json',\n        type: 'file',\n        path: 'src/utils/helpers.pyh.json'\n      }]\n    }, {\n      name: 'index.tsx',\n      type: 'file',\n      path: 'src/index.tsx'\n    }]\n  }, {\n    name: 'backend',\n    type: 'folder',\n    path: 'backend',\n    children: [{\n      name: 'app.py',\n      type: 'file',\n      path: 'backend/app.py'\n    }, {\n      name: 'app.pyh.json',\n      type: 'file',\n      path: 'backend/app.pyh.json'\n    }]\n  }, {\n    name: 'README.md',\n    type: 'file',\n    path: 'README.md'\n  }];\n  const toggleNode = nodePath => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodePath)) {\n      newExpanded.delete(nodePath);\n    } else {\n      newExpanded.add(nodePath);\n    }\n    setExpandedNodes(newExpanded);\n  };\n  const handleFileClick = filePath => {\n    setSelectedFile(filePath);\n    onFileSelect(filePath);\n  };\n  const getFileIcon = fileName => {\n    if (fileName.endsWith('.py')) {\n      return /*#__PURE__*/_jsxDEV(FileCode, {\n        className: \"h-4 w-4 text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(File, {\n        className: \"h-4 w-4 text-gray-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderNode = (node, level = 0) => {\n    const isExpanded = expandedNodes.has(node.path);\n    const isSelected = selectedFile === node.path;\n    const hasChildren = node.children && node.children.length > 0;\n    const isFolder = node.type === 'folder';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center py-1 px-2 cursor-pointer hover:bg-gray-100 transition-colors ${isSelected ? 'bg-blue-50 border-r-2 border-blue-500' : ''}`,\n        style: {\n          paddingLeft: `${level * 16 + 8}px`\n        },\n        onClick: () => {\n          if (isFolder) {\n            toggleNode(node.path);\n          } else {\n            handleFileClick(node.path);\n          }\n        },\n        children: [isFolder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-1\",\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n            className: \"h-3 w-3 text-gray-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            className: \"h-3 w-3 text-gray-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-2\",\n          children: isFolder ? isExpanded ? /*#__PURE__*/_jsxDEV(FolderOpen, {\n            className: \"h-4 w-4 text-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Folder, {\n            className: \"h-4 w-4 text-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this) : getFileIcon(node.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-sm truncate ${isSelected ? 'text-blue-700 font-medium' : isFolder ? 'font-bold text-gray-800' : 'text-gray-700'}`,\n          children: node.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), isFolder && isExpanded && hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: node.children.map(child => renderNode(child, level + 1))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, node.path, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-64 bg-gray-50 border-r border-gray-300 h-full overflow-y-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-semibold text-gray-800 mb-2\",\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), mockFiles.map(node => renderNode(node))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"TL9spA2bLTkJyQpFi5qPMkb7kG4=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","ChevronRight","ChevronDown","File","Folder","FolderOpen","FileCode","jsxDEV","_jsxDEV","FileExplorer","onFileSelect","_s","expandedNodes","setExpandedNodes","Set","selectedFile","setSelectedFile","mockFiles","name","type","path","children","toggleNode","nodePath","newExpanded","has","delete","add","handleFileClick","filePath","getFileIcon","fileName","endsWith","className","_jsxFileName","lineNumber","columnNumber","renderNode","node","level","isExpanded","isSelected","hasChildren","length","isFolder","style","paddingLeft","onClick","map","child","_c","$RefreshReg$"],"sources":["/Users/krishnapagrut/Developer/hcli/frontend/src/components/FileExplorer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  ChevronRight, \n  ChevronDown, \n  File, \n  Folder, \n  FolderOpen,\n  FileCode\n} from 'lucide-react';\n\ninterface FileExplorerProps {\n  onFileSelect: (filePath: string) => void;\n}\n\ninterface FileNode {\n  name: string;\n  type: 'file' | 'folder';\n  path: string;\n  children?: FileNode[];\n}\n\nconst FileExplorer: React.FC<FileExplorerProps> = ({ onFileSelect }) => {\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set());\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\n\n  // Mock data structure\n  const mockFiles: FileNode[] = [\n    {\n      name: 'src',\n      type: 'folder',\n      path: 'src',\n      children: [\n        {\n          name: 'components',\n          type: 'folder',\n          path: 'src/components',\n          children: [\n            { name: 'App.tsx', type: 'file', path: 'src/components/App.tsx' },\n            { name: 'Button.tsx', type: 'file', path: 'src/components/Button.tsx' }\n          ]\n        },\n        {\n          name: 'utils',\n          type: 'folder',\n          path: 'src/utils',\n          children: [\n            { name: 'helpers.py', type: 'file', path: 'src/utils/helpers.py' },\n            { name: 'helpers.pyh.json', type: 'file', path: 'src/utils/helpers.pyh.json' }\n          ]\n        },\n        { name: 'index.tsx', type: 'file', path: 'src/index.tsx' }\n      ]\n    },\n    {\n      name: 'backend',\n      type: 'folder',\n      path: 'backend',\n      children: [\n        { name: 'app.py', type: 'file', path: 'backend/app.py' },\n        { name: 'app.pyh.json', type: 'file', path: 'backend/app.pyh.json' }\n      ]\n    },\n    { name: 'README.md', type: 'file', path: 'README.md' }\n  ];\n\n  const toggleNode = (nodePath: string) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodePath)) {\n      newExpanded.delete(nodePath);\n    } else {\n      newExpanded.add(nodePath);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  const handleFileClick = (filePath: string) => {\n    setSelectedFile(filePath);\n    onFileSelect(filePath);\n  };\n\n  const getFileIcon = (fileName: string) => {\n    if (fileName.endsWith('.py')) {\n      return <FileCode className=\"h-4 w-4 text-blue-500\" />;\n    } else {\n      return <File className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const renderNode = (node: FileNode, level: number = 0): React.ReactNode => {\n    const isExpanded = expandedNodes.has(node.path);\n    const isSelected = selectedFile === node.path;\n    const hasChildren = node.children && node.children.length > 0;\n    const isFolder = node.type === 'folder';\n\n    return (\n      <div key={node.path}>\n        <div\n          className={`flex items-center py-1 px-2 cursor-pointer hover:bg-gray-100 transition-colors ${\n            isSelected ? 'bg-blue-50 border-r-2 border-blue-500' : ''\n          }`}\n          style={{ paddingLeft: `${level * 16 + 8}px` }}\n          onClick={() => {\n            if (isFolder) {\n              toggleNode(node.path);\n            } else {\n              handleFileClick(node.path);\n            }\n          }}\n        >\n          {isFolder && (\n            <div className=\"mr-1\">\n              {isExpanded ? (\n                <ChevronDown className=\"h-3 w-3 text-gray-500\" />\n              ) : (\n                <ChevronRight className=\"h-3 w-3 text-gray-500\" />\n              )}\n            </div>\n          )}\n          \n          <div className=\"mr-2\">\n            {isFolder ? (\n              isExpanded ? (\n                <FolderOpen className=\"h-4 w-4 text-blue-500\" />\n              ) : (\n                <Folder className=\"h-4 w-4 text-blue-500\" />\n              )\n            ) : (\n              getFileIcon(node.name)\n            )}\n          </div>\n          \n          <span className={`text-sm truncate ${\n            isSelected ? 'text-blue-700 font-medium' : isFolder ? 'font-bold text-gray-800' : 'text-gray-700'\n          }`}>\n            {node.name}\n          </span>\n        </div>\n        \n        {isFolder && isExpanded && hasChildren && (\n          <div>\n            {node.children!.map(child => renderNode(child, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"w-64 bg-gray-50 border-r border-gray-300 h-full overflow-y-auto\">\n      <div className=\"p-3\">\n        <h3 className=\"text-sm font-semibold text-gray-800 mb-2\">Files</h3>\n        {mockFiles.map(node => renderNode(node))}\n      </div>\n    </div>\n  );\n};\n\nexport default FileExplorer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
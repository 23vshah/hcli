{"ast":null,"code":"var _jsxFileName = \"/Users/krishnapagrut/Developer/hcli/frontend/src/components/TwoPanelEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useStore } from '../hooks/useStore';\nimport { Edit3, Save, Eye } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwoPanelEditor = ({\n  pyhContent,\n  pyContent\n}) => {\n  _s();\n  const {\n    repository,\n    updatePyhContent,\n    saveUserPhy,\n    isLoading,\n    editor\n  } = useStore();\n  const [leftWidth, setLeftWidth] = useState(50); // percentage\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoveredLine, setHoveredLine] = useState(null);\n  const [activeLine, setActiveLine] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const containerRef = useRef(null);\n\n  // Split content into lines\n  const pyhLines = pyhContent.split('\\n');\n  const pyLines = pyContent.split('\\n');\n\n  // Create line range mappings from PHY JSON structure\n  const lineMappings = editor.lineMappings || [];\n\n  // Create maps for highlighting ranges\n  const pyhToPyRanges = new Map();\n  const pyToPyhLines = new Map();\n\n  // Create a map of actual PHY line numbers to their content\n  const phyLineToContent = new Map();\n  const phyLineToIndex = new Map();\n  lineMappings.forEach(mapping => {\n    if (mapping.pyLineRange) {\n      // Map PHY line to Python line range\n      pyhToPyRanges.set(mapping.pyhLine, mapping.pyLineRange);\n\n      // Map each Python line in the range to the PHY line\n      const [start, end] = mapping.pyLineRange;\n      for (let line = start; line <= end; line++) {\n        pyToPyhLines.set(line, mapping.pyhLine);\n      }\n    }\n  });\n\n  // Generate the actual PHY content with proper line numbers\n  const generatePhyContent = () => {\n    var _editor$pyhData, _editor$pyhData$phy_c;\n    const lines = [];\n    const lineNumberMap = new Map(); // actual line number -> array index\n\n    const renderNode = (node, indent = 0) => {\n      const pad = \"    \".repeat(indent);\n      const sig = node.signature;\n      const desc = node.description;\n      const lineRange = node.line_range;\n\n      // Line info\n      const lineInfo = lineRange ? `  (lines ${lineRange[0]}â€“${lineRange[1]})` : '';\n\n      // Show signature\n      if (sig) {\n        const lineNumber = lines.length + 1;\n        lines.push(`${pad}${sig}${lineInfo}`);\n        lineNumberMap.set(lineNumber, lines.length - 1);\n        if (desc) {\n          const descLineNumber = lines.length + 1;\n          lines.push(`${pad}    ${desc}`);\n          lineNumberMap.set(descLineNumber, lines.length - 1);\n        }\n      } else if (desc) {\n        const lineNumber = lines.length + 1;\n        lines.push(`${pad}${desc}${lineInfo}`);\n        lineNumberMap.set(lineNumber, lines.length - 1);\n      }\n\n      // Recurse into children\n      for (const child of node.children || []) {\n        renderNode(child, indent + 1);\n      }\n    };\n    if ((_editor$pyhData = editor.pyhData) !== null && _editor$pyhData !== void 0 && (_editor$pyhData$phy_c = _editor$pyhData.phy_chunks) !== null && _editor$pyhData$phy_c !== void 0 && _editor$pyhData$phy_c.main) {\n      renderNode(editor.pyhData.phy_chunks.main);\n    }\n    return {\n      lines,\n      lineNumberMap\n    };\n  };\n  const {\n    lines: actualPhyLines,\n    lineNumberMap\n  } = generatePhyContent();\n\n  // Handle mouse down on divider\n  const handleMouseDown = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  // Handle mouse move for resizing\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!isDragging || !containerRef.current) return;\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const newLeftWidth = (e.clientX - containerRect.left) / containerRect.width * 100;\n\n      // Constrain between 20% and 80%\n      const constrainedWidth = Math.min(Math.max(newLeftWidth, 20), 80);\n      setLeftWidth(constrainedWidth);\n    };\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging]);\n\n  // Line hover highlighting with ranges\n  const handleLineHover = (lineNumber, panel) => {\n    setHoveredLine(lineNumber);\n    if (panel === 'pyh') {\n      // PHY line hovered - highlight the corresponding Python line range\n      const pyRange = pyhToPyRanges.get(lineNumber);\n      if (pyRange) {\n        setHoveredLine(pyRange[0]); // Use start of range as identifier\n      }\n    } else {\n      // Python line hovered - highlight the corresponding PHY line\n      const mappedPyhLine = pyToPyhLines.get(lineNumber);\n      if (mappedPyhLine) {\n        setHoveredLine(mappedPyhLine);\n      }\n    }\n  };\n  const handleLineLeave = () => {\n    setHoveredLine(null);\n  };\n\n  // Handle textarea change for editable content\n  const handlePyhChange = e => {\n    const newContent = e.target.value;\n    updatePyhContent(newContent);\n    setHasUnsavedChanges(true);\n  };\n\n  // Handle save button\n  const handleSave = async () => {\n    if (repository.selectedFile) {\n      await saveUserPhy(repository.selectedFile, pyhContent);\n      setHasUnsavedChanges(false);\n    }\n  };\n\n  // Handle edit toggle\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Handle textarea focus for active line highlighting\n  const handleTextareaFocus = e => {\n    const textarea = e.target;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\n    const lineNumber = textBeforeCursor.split('\\n').length;\n    setActiveLine(lineNumber);\n  };\n  const handleTextareaBlur = () => {\n    setActiveLine(null);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-full w-full bg-gray-50 items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"Loading file content...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: \"Please wait while we load the file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show placeholder if no content\n  if (!pyhContent && !pyContent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-full w-full bg-gray-50 items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"No file selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: \"Select a Python file from the file explorer to view its content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"flex h-full w-full bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 border-r border-gray-300 font-mono text-sm relative flex flex-col\",\n      style: {\n        width: `${leftWidth}%`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-2 bg-gray-200 border-b border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"PHY Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), hasUnsavedChanges && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-orange-600\",\n            children: \"\\u2022 Unsaved changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditToggle,\n            className: `flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors ${isEditing ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-gray-500 text-white hover:bg-gray-600'}`,\n            children: [isEditing ? /*#__PURE__*/_jsxDEV(Eye, {\n              className: \"h-3 w-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Edit3, {\n              className: \"h-3 w-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isEditing ? 'View' : 'Edit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !hasUnsavedChanges,\n            className: \"flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed bg-green-600 text-white hover:bg-green-700\",\n            children: [/*#__PURE__*/_jsxDEV(Save, {\n              className: \"h-3 w-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-2 py-2 h-full\",\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: pyhContent,\n            onChange: handlePyhChange,\n            onFocus: handleTextareaFocus,\n            onBlur: handleTextareaBlur,\n            className: \"w-full h-full resize-none border-none outline-none bg-transparent text-gray-800 min-h-0\",\n            placeholder: \"Edit PHY content here...\",\n            spellCheck: false,\n            style: {\n              height: 'calc(100vh - 250px)',\n              lineHeight: '20px',\n              fontSize: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 bg-gray-100 text-gray-500 text-right pr-2 select-none\",\n              style: {\n                minWidth: '40px'\n              },\n              children: actualPhyLines.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs\",\n                style: {\n                  minHeight: '20px',\n                  lineHeight: '20px'\n                },\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-auto text-gray-800 font-mono\",\n              style: {\n                height: 'calc(100vh - 250px)',\n                lineHeight: '20px',\n                fontSize: '14px',\n                whiteSpace: 'pre-wrap'\n              },\n              children: actualPhyLines.map((line, index) => {\n                const lineNumber = index + 1;\n                const hasMapping = pyhToPyRanges.has(lineNumber);\n                const isHighlighted = hoveredLine === lineNumber;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${isHighlighted ? 'bg-blue-50' : ''} ${activeLine === lineNumber ? 'bg-blue-100' : ''} ${hasMapping ? 'cursor-pointer' : ''}`,\n                  style: {\n                    minHeight: '20px',\n                    lineHeight: '20px',\n                    whiteSpace: 'pre-wrap',\n                    wordBreak: 'break-all'\n                  },\n                  onMouseEnter: () => hasMapping && handleLineHover(lineNumber, 'pyh'),\n                  onMouseLeave: handleLineLeave,\n                  onClick: () => setActiveLine(lineNumber),\n                  children: line || '\\u00A0'\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-1 bg-gray-300 cursor-col-resize hover:bg-gray-400 transition-colors ${isDragging ? 'bg-gray-500' : ''}`,\n      onMouseDown: handleMouseDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-0.5 h-8 bg-gray-400 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white font-mono text-sm relative flex flex-col\",\n      style: {\n        width: `${100 - leftWidth}%`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-2 bg-gray-200 border-b border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Python Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-2 h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 bg-gray-100 text-gray-500 text-right pr-2 select-none\",\n              style: {\n                minWidth: '40px'\n              },\n              children: pyLines.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs\",\n                style: {\n                  minHeight: '20px',\n                  lineHeight: '20px'\n                },\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-auto font-mono text-gray-800\",\n              style: {\n                height: 'calc(100vh - 250px)',\n                lineHeight: '20px',\n                fontSize: '14px',\n                whiteSpace: 'pre-wrap',\n                paddingTop: '0px'\n              },\n              children: pyLines.map((line, index) => {\n                const lineNumber = index + 1;\n                const hasMapping = pyToPyhLines.has(lineNumber);\n                const isHighlighted = hoveredLine === lineNumber;\n\n                // Check if this line is in a highlighted range\n                const isInHighlightedRange = Array.from(pyhToPyRanges.values()).some(range => {\n                  const [start, end] = range;\n                  return lineNumber >= start && lineNumber <= end && pyToPyhLines.get(start) === hoveredLine;\n                });\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${isHighlighted || isInHighlightedRange ? 'bg-blue-50' : ''} ${hasMapping ? 'cursor-pointer' : ''}`,\n                  style: {\n                    minHeight: '20px',\n                    lineHeight: '20px',\n                    whiteSpace: 'pre-wrap',\n                    wordBreak: 'break-all'\n                  },\n                  onMouseEnter: () => hasMapping && handleLineHover(lineNumber, 'py'),\n                  onMouseLeave: handleLineLeave,\n                  children: [line || '\\u00A0', \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(TwoPanelEditor, \"ixFh7I5u1seqne410Zr+Kl2cWDo=\", false, function () {\n  return [useStore];\n});\n_c = TwoPanelEditor;\nexport default TwoPanelEditor;\nvar _c;\n$RefreshReg$(_c, \"TwoPanelEditor\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useStore","Edit3","Save","Eye","jsxDEV","_jsxDEV","TwoPanelEditor","pyhContent","pyContent","_s","repository","updatePyhContent","saveUserPhy","isLoading","editor","leftWidth","setLeftWidth","isDragging","setIsDragging","hoveredLine","setHoveredLine","activeLine","setActiveLine","isEditing","setIsEditing","hasUnsavedChanges","setHasUnsavedChanges","containerRef","pyhLines","split","pyLines","lineMappings","pyhToPyRanges","Map","pyToPyhLines","phyLineToContent","phyLineToIndex","forEach","mapping","pyLineRange","set","pyhLine","start","end","line","generatePhyContent","_editor$pyhData","_editor$pyhData$phy_c","lines","lineNumberMap","renderNode","node","indent","pad","repeat","sig","signature","desc","description","lineRange","line_range","lineInfo","lineNumber","length","push","descLineNumber","child","children","pyhData","phy_chunks","main","actualPhyLines","handleMouseDown","e","preventDefault","handleMouseMove","current","containerRect","getBoundingClientRect","newLeftWidth","clientX","left","width","constrainedWidth","Math","min","max","handleMouseUp","document","addEventListener","removeEventListener","handleLineHover","panel","pyRange","get","mappedPyhLine","handleLineLeave","handlePyhChange","newContent","target","value","handleSave","selectedFile","handleEditToggle","handleTextareaFocus","textarea","cursorPosition","selectionStart","textBeforeCursor","substring","handleTextareaBlur","className","fileName","_jsxFileName","columnNumber","ref","style","onClick","disabled","onChange","onFocus","onBlur","placeholder","spellCheck","height","lineHeight","fontSize","minWidth","map","_","index","minHeight","whiteSpace","hasMapping","has","isHighlighted","wordBreak","onMouseEnter","onMouseLeave","onMouseDown","paddingTop","isInHighlightedRange","Array","from","values","some","range","_c","$RefreshReg$"],"sources":["/Users/krishnapagrut/Developer/hcli/frontend/src/components/TwoPanelEditor.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useStore } from '../hooks/useStore';\nimport { Edit3, Save, Eye } from 'lucide-react';\n\ninterface TwoPanelEditorProps {\n  pyhContent: string;   // text output from pyh_ast_to_output.py\n  pyContent: string;    // actual Python code\n}\n\nconst TwoPanelEditor: React.FC<TwoPanelEditorProps> = ({ pyhContent, pyContent }) => {\n  const { repository, updatePyhContent, saveUserPhy, isLoading, editor } = useStore();\n  const [leftWidth, setLeftWidth] = useState(50); // percentage\n  const [isDragging, setIsDragging] = useState(false);\n  const [hoveredLine, setHoveredLine] = useState<number | null>(null);\n  const [activeLine, setActiveLine] = useState<number | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n\n  // Split content into lines\n  const pyhLines = pyhContent.split('\\n');\n  const pyLines = pyContent.split('\\n');\n  \n  // Create line range mappings from PHY JSON structure\n  const lineMappings = editor.lineMappings || [];\n  \n  // Create maps for highlighting ranges\n  const pyhToPyRanges = new Map<number, [number, number]>();\n  const pyToPyhLines = new Map<number, number>();\n  \n  // Create a map of actual PHY line numbers to their content\n  const phyLineToContent = new Map<number, string>();\n  const phyLineToIndex = new Map<number, number>();\n  \n  lineMappings.forEach(mapping => {\n    if (mapping.pyLineRange) {\n      // Map PHY line to Python line range\n      pyhToPyRanges.set(mapping.pyhLine, mapping.pyLineRange);\n      \n      // Map each Python line in the range to the PHY line\n      const [start, end] = mapping.pyLineRange;\n      for (let line = start; line <= end; line++) {\n        pyToPyhLines.set(line, mapping.pyhLine);\n      }\n    }\n  });\n  \n  // Generate the actual PHY content with proper line numbers\n  const generatePhyContent = () => {\n    const lines: string[] = [];\n    const lineNumberMap = new Map<number, number>(); // actual line number -> array index\n    \n    const renderNode = (node: any, indent = 0): void => {\n      const pad = \"    \".repeat(indent);\n      const sig = node.signature;\n      const desc = node.description;\n      const lineRange = node.line_range;\n      \n      // Line info\n      const lineInfo = lineRange ? `  (lines ${lineRange[0]}â€“${lineRange[1]})` : '';\n      \n      // Show signature\n      if (sig) {\n        const lineNumber = lines.length + 1;\n        lines.push(`${pad}${sig}${lineInfo}`);\n        lineNumberMap.set(lineNumber, lines.length - 1);\n        \n        if (desc) {\n          const descLineNumber = lines.length + 1;\n          lines.push(`${pad}    ${desc}`);\n          lineNumberMap.set(descLineNumber, lines.length - 1);\n        }\n      } else if (desc) {\n        const lineNumber = lines.length + 1;\n        lines.push(`${pad}${desc}${lineInfo}`);\n        lineNumberMap.set(lineNumber, lines.length - 1);\n      }\n      \n      // Recurse into children\n      for (const child of node.children || []) {\n        renderNode(child, indent + 1);\n      }\n    };\n    \n    if (editor.pyhData?.phy_chunks?.main) {\n      renderNode(editor.pyhData.phy_chunks.main);\n    }\n    \n    return { lines, lineNumberMap };\n  };\n  \n  const { lines: actualPhyLines, lineNumberMap } = generatePhyContent();\n\n  // Handle mouse down on divider\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  // Handle mouse move for resizing\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isDragging || !containerRef.current) return;\n      \n      const containerRect = containerRef.current.getBoundingClientRect();\n      const newLeftWidth = ((e.clientX - containerRect.left) / containerRect.width) * 100;\n      \n      // Constrain between 20% and 80%\n      const constrainedWidth = Math.min(Math.max(newLeftWidth, 20), 80);\n      setLeftWidth(constrainedWidth);\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging]);\n\n  // Line hover highlighting with ranges\n  const handleLineHover = (lineNumber: number, panel: 'pyh' | 'py') => {\n    setHoveredLine(lineNumber);\n    \n    if (panel === 'pyh') {\n      // PHY line hovered - highlight the corresponding Python line range\n      const pyRange = pyhToPyRanges.get(lineNumber);\n      if (pyRange) {\n        setHoveredLine(pyRange[0]); // Use start of range as identifier\n      }\n    } else {\n      // Python line hovered - highlight the corresponding PHY line\n      const mappedPyhLine = pyToPyhLines.get(lineNumber);\n      if (mappedPyhLine) {\n        setHoveredLine(mappedPyhLine);\n      }\n    }\n  };\n\n  const handleLineLeave = () => {\n    setHoveredLine(null);\n  };\n\n  // Handle textarea change for editable content\n  const handlePyhChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newContent = e.target.value;\n    updatePyhContent(newContent);\n    setHasUnsavedChanges(true);\n  };\n\n  // Handle save button\n  const handleSave = async () => {\n    if (repository.selectedFile) {\n      await saveUserPhy(repository.selectedFile, pyhContent);\n      setHasUnsavedChanges(false);\n    }\n  };\n\n  // Handle edit toggle\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Handle textarea focus for active line highlighting\n  const handleTextareaFocus = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    const textarea = e.target;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, cursorPosition);\n    const lineNumber = textBeforeCursor.split('\\n').length;\n    setActiveLine(lineNumber);\n  };\n\n  const handleTextareaBlur = () => {\n    setActiveLine(null);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <div className=\"flex h-full w-full bg-gray-50 items-center justify-center\">\n        <div className=\"text-center text-gray-500\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <div className=\"text-lg font-medium mb-2\">Loading file content...</div>\n          <div className=\"text-sm\">Please wait while we load the file</div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show placeholder if no content\n  if (!pyhContent && !pyContent) {\n    return (\n      <div className=\"flex h-full w-full bg-gray-50 items-center justify-center\">\n        <div className=\"text-center text-gray-500\">\n          <div className=\"text-lg font-medium mb-2\">No file selected</div>\n          <div className=\"text-sm\">Select a Python file from the file explorer to view its content</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      ref={containerRef}\n      className=\"flex h-full w-full bg-gray-50\"\n    >\n      {/* Left Panel - PYH Content (Editable) */}\n      <div \n        className=\"bg-gray-100 border-r border-gray-300 font-mono text-sm relative flex flex-col\"\n        style={{ width: `${leftWidth}%` }}\n      >\n        {/* Header with Edit Toggle and Save Button */}\n        <div className=\"flex items-center justify-between p-2 bg-gray-200 border-b border-gray-300\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-gray-700\">PHY Content</span>\n            {hasUnsavedChanges && (\n              <span className=\"text-xs text-orange-600\">â€¢ Unsaved changes</span>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleEditToggle}\n              className={`flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors ${\n                isEditing \n                  ? 'bg-blue-600 text-white hover:bg-blue-700' \n                  : 'bg-gray-500 text-white hover:bg-gray-600'\n              }`}\n            >\n              {isEditing ? <Eye className=\"h-3 w-3\" /> : <Edit3 className=\"h-3 w-3\" />}\n              <span>{isEditing ? 'View' : 'Edit'}</span>\n            </button>\n            {isEditing && (\n              <button\n                onClick={handleSave}\n                disabled={!hasUnsavedChanges}\n                className=\"flex items-center space-x-1 px-2 py-1 rounded text-xs font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed bg-green-600 text-white hover:bg-green-700\"\n              >\n                <Save className=\"h-3 w-3\" />\n                <span>Save</span>\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div className=\"flex-1 relative\">\n          {/* Content */}\n          <div className=\"px-2 py-2 h-full\">\n            {isEditing ? (\n              <textarea\n                value={pyhContent}\n                onChange={handlePyhChange}\n                onFocus={handleTextareaFocus}\n                onBlur={handleTextareaBlur}\n                className=\"w-full h-full resize-none border-none outline-none bg-transparent text-gray-800 min-h-0\"\n                placeholder=\"Edit PHY content here...\"\n                spellCheck={false}\n                style={{ \n                  height: 'calc(100vh - 250px)',\n                  lineHeight: '20px',\n                  fontSize: '14px'\n                }}\n              />\n            ) : (\n              <div className=\"flex h-full\">\n                {/* Line Numbers */}\n                <div className=\"flex-shrink-0 bg-gray-100 text-gray-500 text-right pr-2 select-none\" style={{ minWidth: '40px' }}>\n                  {actualPhyLines.map((_, index) => (\n                    <div\n                      key={index}\n                      className=\"text-xs\"\n                      style={{ \n                        minHeight: '20px', \n                        lineHeight: '20px'\n                      }}\n                    >\n                      {index + 1}\n                    </div>\n                  ))}\n                </div>\n                \n                {/* Content */}\n                <div \n                  className=\"flex-1 overflow-auto text-gray-800 font-mono\"\n                  style={{ \n                    height: 'calc(100vh - 250px)',\n                    lineHeight: '20px',\n                    fontSize: '14px',\n                    whiteSpace: 'pre-wrap'\n                  }}\n                >\n                  {actualPhyLines.map((line, index) => {\n                    const lineNumber = index + 1;\n                    const hasMapping = pyhToPyRanges.has(lineNumber);\n                    const isHighlighted = hoveredLine === lineNumber;\n                    \n                    return (\n                      <div\n                        key={index}\n                        className={`${\n                          isHighlighted ? 'bg-blue-50' : ''\n                        } ${activeLine === lineNumber ? 'bg-blue-100' : ''} ${\n                          hasMapping ? 'cursor-pointer' : ''\n                        }`}\n                        style={{ \n                          minHeight: '20px', \n                          lineHeight: '20px',\n                          whiteSpace: 'pre-wrap',\n                          wordBreak: 'break-all'\n                        }}\n                        onMouseEnter={() => hasMapping && handleLineHover(lineNumber, 'pyh')}\n                        onMouseLeave={handleLineLeave}\n                        onClick={() => setActiveLine(lineNumber)}\n                      >\n                        {line || '\\u00A0'}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Resizable Divider */}\n      <div\n        className={`w-1 bg-gray-300 cursor-col-resize hover:bg-gray-400 transition-colors ${\n          isDragging ? 'bg-gray-500' : ''\n        }`}\n        onMouseDown={handleMouseDown}\n      >\n        <div className=\"w-full h-full flex items-center justify-center\">\n          <div className=\"w-0.5 h-8 bg-gray-400 rounded\"></div>\n        </div>\n      </div>\n\n      {/* Right Panel - PY Content (Read-only) */}\n      <div \n        className=\"bg-white font-mono text-sm relative flex flex-col\"\n        style={{ width: `${100 - leftWidth}%` }}\n      >\n        {/* Header with Edit Toggle and Save Button */}\n        <div className=\"flex items-center justify-between p-2 bg-gray-200 border-b border-gray-300\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Python Code</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            {/* Empty space to match PHY header height */}\n            <div className=\"h-6\"></div>\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div className=\"flex-1 relative\">\n          {/* Content */}\n          <div className=\"px-2 h-full\">\n            <div className=\"flex h-full\">\n              {/* Line Numbers */}\n              <div className=\"flex-shrink-0 bg-gray-100 text-gray-500 text-right pr-2 select-none\" style={{ minWidth: '40px' }}>\n                {pyLines.map((_, index) => (\n                  <div\n                    key={index}\n                    className=\"text-xs\"\n                    style={{ \n                      minHeight: '20px', \n                      lineHeight: '20px'\n                    }}\n                  >\n                    {index + 1}\n                  </div>\n                ))}\n              </div>\n              \n              {/* Content */}\n              <div \n                className=\"flex-1 overflow-auto font-mono text-gray-800\" \n                style={{ \n                  height: 'calc(100vh - 250px)',\n                  lineHeight: '20px',\n                  fontSize: '14px',\n                  whiteSpace: 'pre-wrap',\n                  paddingTop: '0px'\n                }}\n              >\n                {pyLines.map((line, index) => {\n                  const lineNumber = index + 1;\n                  const hasMapping = pyToPyhLines.has(lineNumber);\n                  const isHighlighted = hoveredLine === lineNumber;\n                  \n                  // Check if this line is in a highlighted range\n                  const isInHighlightedRange = Array.from(pyhToPyRanges.values()).some(range => {\n                    const [start, end] = range;\n                    return lineNumber >= start && lineNumber <= end && \n                           pyToPyhLines.get(start) === hoveredLine;\n                  });\n                  \n                  return (\n                    <div\n                      key={index}\n                      className={`${\n                        isHighlighted || isInHighlightedRange ? 'bg-blue-50' : ''\n                      } ${hasMapping ? 'cursor-pointer' : ''}`}\n                      style={{ \n                        minHeight: '20px', \n                        lineHeight: '20px',\n                        whiteSpace: 'pre-wrap',\n                        wordBreak: 'break-all'\n                      }}\n                      onMouseEnter={() => hasMapping && handleLineHover(lineNumber, 'py')}\n                      onMouseLeave={handleLineLeave}\n                    >\n                      {line || '\\u00A0'} {/* Non-breaking space for empty lines */}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TwoPanelEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}